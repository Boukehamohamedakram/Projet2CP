import { useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import "../css/LoginPage1.css";

const API = import.meta.env.VITE_API_URL;

export default function LoginPage() {
  const navigate = useNavigate();
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [showPassword, setShowPassword] = useState(false);
  const [error, setError] = useState("");

  const handleSubmit = async (e) => {
    e.preventDefault();
    console.log("Login attempted with:", { username, password });

    try {
      const response = await fetch(`${API}/api/users/login/`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ username, password }),
      });

      if (response.ok) {
        const data = await response.json();
        console.log("Login successful:", data);
        
        // Store token and userId
        localStorage.setItem("token", data.token);
        localStorage.setItem("userId", data.id.toString());
        
        // Redirect to home page using navigate
        navigate('/home');
      } else {
        const errorData = await response.json();
        console.error("Login failed:", errorData);
        setError(errorData.detail || "Invalid username or password");
      }
    } catch (err) {
      console.error("Error during login:", err);
      setError("Network error. Please try again.");
    }
  };

  return (
    <div className="login-page-container">
      <div className="login-card">
        <div className="login-logo-container">
          <div className="logo-icon">
          <svg
              xmlns="http://www.w3.org/2000/svg"
              width="77"
              height="101"
              viewBox="0 0 77 101"
              fill="none"
            >
              <path
                d="M75.3835 27.5006C74.8561 25.0086 73.9868 22.6542 72.7758 20.4374C70.2201 16.0763 66.7802 12.7222 62.4488 10.3678C60.324 9.21598 58.1323 8.34666 55.8738 7.75987C55.2274 7.58601 54.5662 7.44112 53.905 7.31797C53.1397 7.18033 52.3745 7.06442 51.5944 6.99197C50.6137 6.89055 49.6182 6.83984 48.6078 6.83984C45.5542 6.83984 42.5899 7.25277 39.7147 8.08586C37.9762 8.59297 36.2971 9.23047 34.6998 10.0201C33.9866 10.3606 33.2882 10.7373 32.6047 11.1502C32.5378 11.1864 32.4784 11.2227 32.4115 11.2589C32.1664 11.411 31.9212 11.5559 31.676 11.7153C29.7592 13.0337 27.9316 14.7289 26.1931 16.8008C24.4546 18.8726 22.8944 21.1256 21.5051 23.5452C20.1232 25.9648 18.9493 28.4424 17.9984 30.9706C17.04 33.4917 16.3862 35.8316 16.0296 37.9759C15.985 38.2729 15.9478 38.5699 15.9107 38.8669C15.8735 39.1422 15.7249 39.5407 15.5912 39.9826C15.4872 40.3448 15.3906 40.7287 15.3906 41.0837V50.5303C15.7175 51.1243 16.0816 51.6894 16.4679 52.2254C16.9434 52.8847 17.4709 53.5149 18.0355 54.1017C19.5957 55.7245 21.5125 57.0212 23.7191 57.9557C25.517 58.7163 27.5378 59.0931 29.7369 59.0931C30.0044 59.0931 30.2793 59.0931 30.5542 59.0786C30.4279 58.9337 30.3016 58.7815 30.1827 58.6294C28.6894 56.7604 27.5898 54.6016 26.884 52.1458C26.3937 50.4506 26.0742 48.6902 25.9256 46.8791C25.8587 46.0678 25.8216 45.2419 25.8216 44.4088C25.8216 43.6409 25.8587 42.8585 25.9256 42.0544C26.0445 40.6273 26.2748 39.1422 26.6165 37.6064C27.144 35.2158 27.9093 32.8831 28.9048 30.6012C29.8929 28.3192 31.1188 26.1532 32.575 24.1103C34.0237 22.0746 35.6805 20.3577 37.523 18.9741C39.0832 17.9309 40.7177 17.1195 42.419 16.5327C43.0431 16.3154 43.6894 16.1415 44.3358 16.0039C44.8484 15.8952 45.3611 15.8083 45.8811 15.7576C46.4978 15.6851 47.1144 15.6489 47.7385 15.6489C48.3031 15.6489 48.8604 15.6779 49.4101 15.7214C51.9956 15.9387 54.4696 16.6776 56.8396 17.9309C57.9912 18.5394 59.0387 19.2566 59.9823 20.0897C60.6286 20.6547 61.2378 21.2778 61.7876 21.9442C62.4563 22.7411 63.0581 23.6249 63.593 24.5739C64.3731 26.1677 64.9377 27.8411 65.2943 29.6087C65.4801 30.5215 65.6138 31.4343 65.703 32.3543C65.7847 33.2164 65.8293 34.0857 65.8293 34.955C65.8293 37.4471 65.5469 40.0623 64.9749 42.7861C64.4028 45.5245 63.5187 48.1541 62.3077 50.6752C61.1338 53.1382 59.6554 55.4202 57.8723 57.5138C57.8277 57.5717 57.7831 57.6225 57.7311 57.6804C56.9139 58.6294 56.0298 59.4915 55.0788 60.2739C55.9481 60.8027 56.8247 61.2808 57.7088 61.701C59.6034 62.6065 61.7059 63.5338 63.957 64.4756C64.0016 64.4901 64.0462 64.5118 64.0908 64.5263L64.3136 64.6277L64.4102 64.7146C65.8664 63.1644 67.1888 61.4909 68.3776 59.7016C70.012 57.2458 71.4162 54.6813 72.5826 52.0226C73.7491 49.3567 74.6555 46.8139 75.2944 44.3871C75.5767 42.8006 75.7922 41.2068 75.9333 39.6131C76.0745 38.0266 76.1413 36.4328 76.1413 34.8391C76.1413 32.4123 75.8813 29.9564 75.3464 27.4644L75.3835 27.5006ZM43.5632 67.2357C42.8722 67.5616 42.1887 67.8876 41.4755 68.1991C40.5988 68.5903 39.737 68.9453 38.9049 69.2641C38.0579 69.5901 37.1441 69.8726 36.104 70.1406C35.1307 70.3869 34.0386 70.6187 32.7533 70.8361H32.7013L32.6567 70.8506C32.0178 70.9158 31.3788 70.9737 30.7548 71.0027C31.0222 71.1114 31.2971 71.2128 31.572 71.307C33.4888 71.93 35.3833 72.5168 37.2704 73.0673C39.1501 73.6251 41.0148 73.9004 42.8574 73.9004C45.0565 73.9004 47.2036 73.6251 49.2913 73.0673C50.2051 72.821 51.1412 72.553 52.0847 72.2487C48.9941 70.7274 46.1412 69.0395 43.5557 67.2284L43.5632 67.2357ZM25.7993 70.894C23.615 70.6695 21.5125 70.1986 19.5511 69.4886C18.1098 68.967 16.7131 68.344 15.4055 67.6341L15.4055 95.8724C15.4055 97.2923 15.9924 98.5745 16.9434 99.5018C18.0429 100.574 19.6254 101.168 21.3565 100.958C23.8899 100.646 25.9405 98.2268 25.9405 95.7348V70.9085C25.8959 70.9085 25.8513 70.9013 25.8067 70.894H25.7993Z"
                fill="url(#paint0_linear_2552_654)"
              />
              <path
                d="M67.0122 69.989C66.8859 68.656 66.1058 67.4679 64.6422 66.432C64.3599 66.2292 64.0553 66.0336 63.7284 65.8452C63.7284 65.8452 63.721 65.8452 63.7136 65.838L63.6095 65.7365C63.6095 65.7365 63.5501 65.7076 63.5204 65.7003C63.1712 65.5554 62.822 65.4105 62.4728 65.2584C61.9751 65.0483 61.4847 64.8382 61.0018 64.6282C60.192 64.2804 59.4119 63.9255 58.6467 63.5777C58.3941 63.4618 58.1415 63.3459 57.8963 63.23C57.6511 63.1141 57.4059 62.9982 57.1682 62.8823C56.9305 62.7736 56.7001 62.6577 56.4698 62.5346C56.2395 62.4114 56.0018 62.2955 55.7789 62.1651C55.5486 62.0419 55.3257 61.9188 55.0954 61.7812C54.8725 61.658 54.6496 61.5276 54.4267 61.3827C54.293 61.3103 54.1593 61.2233 54.0255 61.1437C53.9661 61.1074 53.9141 61.0712 53.8547 61.035C53.5352 60.8394 53.2306 60.6365 52.9185 60.4265C52.4282 60.1005 51.9527 59.7527 51.4772 59.3978C55.0954 54.9715 57.718 50.0091 59.3525 44.5035C60.987 38.9978 61.6259 33.2096 61.2693 27.1171C61.1355 25.5668 60.9201 24.0455 60.608 22.546C60.1548 22.0171 59.6571 21.5245 59.137 21.0681C58.2752 20.3075 57.3019 19.6338 56.2395 19.0759C54.033 17.9096 51.7076 17.2142 49.3227 17.0113C48.7952 16.9679 48.2677 16.9461 47.7625 16.9461C47.4653 16.9461 47.1681 16.9534 46.8784 16.9751C47.6511 18.0038 48.3123 19.1411 48.8695 20.3727C49.8948 22.6546 50.5931 25.1829 50.9423 27.9502C51.2915 32.2389 50.9052 36.5347 49.7685 40.8234C48.6318 45.112 46.6407 49.0964 43.8026 52.762C41.7446 50.4076 39.4415 47.5388 36.8858 44.1413C35.8976 43.0329 34.3672 42.5185 32.3092 42.5837C30.8902 42.7214 29.7535 43.2285 28.9065 44.0906C28.0521 44.9526 27.6658 46.0103 27.7327 47.2563C28.0893 48.1546 28.2973 48.7269 28.3716 48.966C28.4385 49.2123 28.6242 49.5745 28.9065 50.0599C30.1101 51.7188 31.2617 53.2763 32.3612 54.7324C33.4608 56.1813 34.7238 57.6012 36.1428 58.9848C35.2884 59.3326 34.4563 59.6079 33.6391 59.8179C33.4459 59.8687 33.2602 59.9194 33.067 59.9556C32.599 60.0642 32.1309 60.1657 31.6777 60.2526C31.5366 60.2816 31.388 60.3106 31.2468 60.3323C30.9942 60.3468 30.749 60.3613 30.5039 60.3685H30.4741C30.2364 60.3758 29.9912 60.383 29.7535 60.383C27.807 60.383 26.009 60.1077 24.3374 59.5644C23.9585 59.434 23.5796 59.2964 23.2081 59.1442C23.0595 59.0863 22.9109 59.0211 22.7698 58.9559C20.7267 58.0286 18.9362 56.8188 17.4131 55.312C17.3017 55.2033 17.1903 55.0947 17.0863 54.986C16.477 54.3557 15.9198 53.682 15.4072 52.9721C15.2957 52.8127 15.1843 52.6533 15.0729 52.4867C14.8871 52.2114 14.7014 51.9216 14.5305 51.6246C14.4414 51.4797 14.3522 51.3276 14.2705 51.1755C14.211 51.0741 14.1442 50.9654 14.0922 50.8567C13.7207 50.1758 13.3938 49.4513 13.0966 48.7052C12.1382 46.2856 11.5513 43.7573 11.3433 41.1276C11.1278 38.9181 11.165 36.5637 11.4473 34.0717C11.7296 31.5796 12.2794 29.1238 13.0966 26.697C13.9139 24.2774 14.9614 21.9954 16.2393 19.8438C17.5172 17.6995 19.0773 15.8305 20.9199 14.2367C22.3389 12.8531 23.9065 11.8316 25.6078 11.1724C27.3092 10.5204 29.0477 10.0785 30.8233 9.87567C31.3137 9.85394 31.7966 9.83945 32.2646 9.84669C32.8887 9.47723 33.5054 9.15124 34.1369 8.85422C35.7639 8.0501 37.5247 7.37638 39.3598 6.8403C42.339 5.97823 45.4594 5.54357 48.6243 5.54357C48.9958 5.54357 49.3598 5.55082 49.7313 5.56531C48.3569 4.6163 46.8784 3.82667 45.3033 3.17468C40.6897 1.27667 35.8679 0.494289 30.8233 0.842016C27.8441 1.0521 24.9318 1.71133 22.0937 2.81247C19.2557 3.92085 16.6256 5.37695 14.2185 7.17354C11.7296 9.11502 9.61964 11.4332 7.88115 14.1281C6.14265 16.823 4.72363 19.699 3.62406 22.7416C2.5245 25.7914 1.75927 28.921 1.33579 32.1374C0.91231 35.3539 0.77115 38.4545 0.91231 41.4246C1.19463 45.5104 2.15303 49.3644 3.78751 53.001C5.42199 56.6304 7.59883 59.7455 10.3329 62.3462C11.8708 63.8023 13.5647 65.0701 15.4146 66.135C15.5632 66.2219 15.7192 66.3088 15.8678 66.3885C16.0907 66.5117 16.3136 66.6276 16.5365 66.7363C16.9005 66.9319 17.272 67.1057 17.6435 67.2868C17.8366 67.3738 18.0298 67.4607 18.223 67.5476C18.4236 67.6346 18.6167 67.7142 18.8173 67.7939C19.0179 67.8736 19.2111 67.9533 19.4117 68.033C19.6123 68.1127 19.8129 68.1851 20.0135 68.2576C20.2438 68.3445 20.4815 68.4169 20.7118 68.4966C20.9496 68.5763 21.1873 68.6488 21.4251 68.7212C22.8664 69.1414 24.3671 69.4311 25.9347 69.5905C26.1353 69.6122 26.3285 69.6267 26.5217 69.6485C27.0417 69.6919 27.5618 69.7137 28.0893 69.7354C28.9362 69.7571 29.8055 69.7499 30.6896 69.6992C30.7862 69.6992 30.8902 69.6847 30.9868 69.6847C31.1279 69.6774 31.2765 69.6702 31.4177 69.6557C31.544 69.6485 31.6629 69.6412 31.7892 69.6267C32.012 69.6123 32.2349 69.5905 32.4578 69.5615C32.4801 69.5615 32.5024 69.5615 32.5247 69.5615C32.8293 69.5108 33.119 69.4529 33.4014 69.4022C33.6019 69.3659 33.7951 69.3225 33.9883 69.2863C34.2112 69.2428 34.4266 69.1993 34.6421 69.1486C35.0358 69.0617 35.4147 68.9748 35.7713 68.8806C35.9942 68.8226 36.2023 68.7719 36.4177 68.7067C36.5589 68.6632 36.7075 68.627 36.8486 68.5763C36.9601 68.5473 37.0715 68.5111 37.1755 68.4749C37.2275 68.4604 37.2795 68.4459 37.3315 68.4242C37.495 68.3807 37.651 68.3228 37.807 68.2721C38.0225 68.1996 38.2305 68.1199 38.4311 68.0475C39.2483 67.736 40.0804 67.3882 40.9348 67.0043C41.1503 66.9101 41.3657 66.8087 41.5886 66.7073C41.8115 66.6059 42.0344 66.5044 42.2647 66.3958C42.495 66.2871 42.7328 66.1784 42.9705 66.0625C42.9779 66.0625 42.9854 66.0553 42.9928 66.0553C43.2231 65.9394 43.4608 65.8307 43.706 65.7076C43.8695 65.8307 44.0329 65.9394 44.2038 66.0625C44.605 66.3523 45.021 66.6348 45.4371 66.9101C45.7194 67.0985 46.0091 67.2868 46.2989 67.4752C46.6109 67.678 46.923 67.8736 47.2499 68.0765C47.2722 68.0909 47.2944 68.1054 47.3167 68.1127C47.6585 68.3228 48.0077 68.5256 48.3494 68.7357C48.6095 68.8878 48.8695 69.0472 49.137 69.1921C49.1518 69.1993 49.1667 69.2066 49.1815 69.221C49.3821 69.3297 49.5827 69.4456 49.7907 69.5615C50.4371 69.9238 51.1058 70.2787 51.7893 70.6265C52.0939 70.7786 52.3985 70.938 52.7031 71.0828C52.9111 71.1915 53.1191 71.2857 53.3272 71.3944C53.5055 71.4813 53.6838 71.5682 53.8695 71.6551C55.6154 72.4882 57.4431 73.2779 59.3599 74.024H59.2559C60.1103 74.437 61.1355 74.5746 62.3465 74.437C63.7656 74.2993 64.9171 73.7777 65.8012 72.8794C66.6853 71.9811 67.094 71.0104 67.0271 69.9745L67.0122 69.989Z"
                fill="url(#paint1_linear_2552_654)"
              />
              <defs>
                <linearGradient
                  id="paint0_linear_2552_654"
                  x1="45.766"
                  y1="6.83984"
                  x2="45.766"
                  y2="101"
                  gradientUnits="userSpaceOnUse"
                >
                  <stop stop-color="#31BCE2" />
                  <stop offset="1" stop-color="#0664AE" />
                </linearGradient>
                <linearGradient
                  id="paint1_linear_2552_654"
                  x1="33.9468"
                  y1="0.761719"
                  x2="33.9468"
                  y2="74.4886"
                  gradientUnits="userSpaceOnUse"
                >
                  <stop stop-color="#31BCE2" />
                  <stop offset="1" stop-color="#0664AE" />
                </linearGradient>
              </defs>
            </svg>
          </div>
          <h2 className="logo-text">QuizPI</h2>
        </div>

        <form onSubmit={handleSubmit} className="login-form">
          <div className="form-group">
            <label htmlFor="username" className="form-label">
              Enter your username:
            </label>
            <div className="input-field">
              <input
                id="username"
                name="username"
                type="text"
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                required
                className="input-control"
                placeholder="johndoe123"
                autoComplete="username"
              />
            </div>
          </div>

          <div className="form-group">
            <label htmlFor="password" className="form-label">
              Enter your Password:
            </label>
            <div className="password-input-wrapper">
              <input
                id="password"
                name="password"
                type={showPassword ? "text" : "password"}
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                required
                className="input-control"
                placeholder="••••••••"
                autoComplete="current-password"
              />
              <span
                onClick={() => setShowPassword(!showPassword)}
                className="toggle-password"
                role="button"
                tabIndex={0}
                aria-label={showPassword ? "Hide password" : "Show password"}
              >
                {showPassword ? (
                  <svg
                    width="20"
                    height="20"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    strokeWidth="2"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  >
                    <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" />
                    <circle cx="12" cy="12" r="3" />
                  </svg>
                ) : (
                  <svg
                    width="20"
                    height="20"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    strokeWidth="2"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  >
                    <path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24" />
                    <line x1="1" y1="1" x2="23" y2="23" />
                  </svg>
                )}
              </span>
            </div>
          </div>

          <Link to="/forgot-password" className="forgot-password-link">
            Forgot Password?
          </Link>

          {error && <div className="error-message">{error}</div>}

          <button type="submit" className="login-button">
            Login
          </button>

          <div className="register-prompt">
            Don't have an account?{" "}
            <Link to="/signup" className="register-link">
              SignUp
            </Link>
          </div>
        </form>
      </div>
    </div>
  );
}